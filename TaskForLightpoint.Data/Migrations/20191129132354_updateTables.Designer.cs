// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskForLightpoint.Data;

namespace TaskForLightpoint.Migrations
{
    [DbContext(typeof(TaskForLightpointContext))]
    [Migration("20191129132354_updateTables")]
    partial class updateTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskForLightpoint.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e01caf44-10dc-4236-8a79-51777d01edac"),
                            Description = "Sleek Spirit II E-210 gas grill",
                            Name = "Gas grill Spirit II E-210"
                        },
                        new
                        {
                            Id = new Guid("b1e7f862-a608-4d35-b2bf-eeb1579a29a2"),
                            Description = "KAYPRO shampoo 1000ml",
                            Name = "Hair Shampoo With Macadamia Oil"
                        },
                        new
                        {
                            Id = new Guid("8ad30a5a-a0cf-4153-92b6-9c07c18be330"),
                            Description = "Triol toy 31cm",
                            Name = "Toy for dogs with a squeaker (Raccoon)"
                        });
                });

            modelBuilder.Entity("TaskForLightpoint.Models.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            Id = new Guid("147d3867-7cda-48b4-9140-c1495aa223fb"),
                            Adress = "g. Minsk, Igumenskiy trakt, 30",
                            Name = "Gippo",
                            OpeningHours = "10-20"
                        },
                        new
                        {
                            Id = new Guid("e39be475-c36a-4a13-bda7-afea9e676378"),
                            Adress = "g. Minsk, ul. I.Goshkevicha, 3",
                            Name = "Evroopt",
                            OpeningHours = "8-22"
                        });
                });

            modelBuilder.Entity("TaskForLightpoint.Models.ShopProduct", b =>
                {
                    b.Property<Guid>("ShopFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShopFK", "ProductFK");

                    b.HasAlternateKey("Id");

                    b.HasIndex("ProductFK");

                    b.ToTable("ShopProduct");
                });

            modelBuilder.Entity("TaskForLightpoint.Models.ShopProduct", b =>
                {
                    b.HasOne("TaskForLightpoint.Models.Product", "Product")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ProductFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskForLightpoint.Models.Shop", "Shop")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ShopFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
