// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskForLightpoint.Data;

namespace TaskForLightpoint.Migrations
{
    [DbContext(typeof(TaskForLightpointContext))]
    partial class TaskForLightpointContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskForLightpoint.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6982555e-a286-49f7-9e3e-ea0977cbb2f5"),
                            Description = "Test 1.1",
                            Name = "Test 1.0"
                        },
                        new
                        {
                            Id = new Guid("24ed4cdd-3d6c-4867-be86-a8bf312a2870"),
                            Description = "Test 2.1",
                            Name = "Test 2.0"
                        });
                });

            modelBuilder.Entity("TaskForLightpoint.Models.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04adbd48-de02-474a-9101-bef3c98e12ae"),
                            Adress = "Test 1.1",
                            Name = "Test 1.0",
                            OpeningHours = "Test1.2"
                        },
                        new
                        {
                            Id = new Guid("66795ba0-a2d4-48f6-814c-ff5284e26d56"),
                            Adress = "Test 2.1",
                            Name = "Test 2.0",
                            OpeningHours = "Test2.2"
                        });
                });

            modelBuilder.Entity("TaskForLightpoint.Models.ShopProduct", b =>
                {
                    b.Property<Guid>("ShopFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShopFK", "ProductFK");

                    b.HasAlternateKey("Id");

                    b.HasIndex("ProductFK");

                    b.ToTable("ShopProduct");
                });

            modelBuilder.Entity("TaskForLightpoint.Models.ShopProduct", b =>
                {
                    b.HasOne("TaskForLightpoint.Models.Product", "Product")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ProductFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskForLightpoint.Models.Shop", "Shop")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ShopFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
